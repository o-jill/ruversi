name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v4
    - name: cpu
      run: cat /proc/cpuinfo
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: false
    - name: Build
      run: |
        cargo build --verbose
    - name: Run tests
      id: utest
      run: cargo test --features=avx --verbose --release  # test w/ simd will get error w/o --release.
    - name: Speed check search
      run: ./tools/speedcheck.sh search
    - name: Speed check game
      run: ./tools/speedcheck.sh game
    - name: Speed check search
      run: ./tools/speedcheck.sh search
      env:
        FEATURES: '--features=avx'
    - name: Speed check game
      run: ./tools/speedcheck.sh game
      env:
        FEATURES: '--features=avx'

  build_mac:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build
      continue-on-error: true # とにかく最後まで行きたい
      id: rubuild
      run: cargo build --verbose
    - name: Run clippy
      continue-on-error: true # とにかく最後まで行きたい
      id: ruclippy
      run: cargo clippy --all-targets
    - name: Run tests
      continue-on-error: true # とにかく最後まで行きたい
      id: rutest
      run: cargo test --verbose
    - name: check error run build
      if: ${{ steps.rubuild.outcome == 'failure' }}
      run: |
        echo ${{ steps.rubuild.outcome }} == 'failure'
        exit 1
    - name: check error run clippy
      if: ${{ steps.ruclippy.outcome == 'failure' }}
      run: |
        echo ${{ steps.ruclippy.outcome }} == 'failure'
        exit 1
    - name: check error run test
      if: ${{ steps.rutest.outcome == 'failure' }}
      run: |
        echo ${{ steps.rutest.outcome }} == 'failure'
        exit 1
